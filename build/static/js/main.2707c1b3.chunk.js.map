{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFish.js","components/EditFish.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","path","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","PropTyes","string","isRequired","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFish","nameRef","priceRef","statusRef","descRef","imageRef","createFish","event","parseFloat","desc","image","addFish","currentTarget","reset","EditFish","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","ReactDom","render","document","querySelector"],"mappings":"sQAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,MAAM,GAAN,OAAUP,EAAMO,GAAhB,YAA+BP,EAAMO,GAArC,YAAoDP,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,U,ICvDWQ,E,2MA5BbC,QAAUC,IAAMC,Y,EAEhBC,UAAY,SAAAC,GAEVA,EAAEC,iBAEF,IAAMC,EAAO,EAAKN,QAAQO,QAAQC,MAElC,EAAKC,MAAMC,QAAQC,KAAnB,iBAAkCL,K,wEAIlC,OACE,0BAAMM,UAAU,iBAAiBC,SAAUC,KAAKX,WAC9C,oDACA,2BACEY,KAAK,OACLC,IAAKF,KAAKd,QACViB,UAAQ,EACRC,YAAY,aACZC,aAActB,MAEhB,4BAAQkB,KAAK,UAAb,2B,GA3BkBd,IAAMmB,W,eCD1BC,EAAS,SAAAZ,GAAK,OAClB,4BAAQG,UAAU,OAChB,oCAEE,0BAAMA,UAAU,SACd,0BAAMA,UAAU,MAAhB,MACA,0BAAMA,UAAU,OAAhB,QAJJ,OAQA,wBAAIA,UAAU,WACZ,8BAAOH,EAAMa,YAKnBD,EAAOE,SAAW,CAChBD,Q,OAASC,EAASC,OAAOC,YAEZJ,Q,QCjBMK,E,2MAOnBC,YAAc,SAAAC,GACZ,IAAMC,EAAO,EAAKpB,MAAMqB,OAAOF,GACzBG,EAAQ,EAAKtB,MAAMuB,MAAMJ,GACzBK,EAAcJ,GAAwB,cAAhBA,EAAKK,OAEjC,OAAKL,EACAI,EAcH,kBAAC,gBAAD,CACEE,WAAW,QACXP,IAAKA,EACLQ,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7B,wBAAIV,IAAKA,GACP,8BACE,kBAAC,kBAAD,CAAiBW,UAAU,OAAO3B,UAAU,SAC1C,kBAAC,gBAAD,CACEuB,WAAW,QACXP,IAAKG,EACLK,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7B,8BAAOP,KAPb,OAUOF,EAAKW,KACTtD,EAAY6C,EAAQF,EAAKY,OAC1B,4BAAQC,QAAS,kBAAM,EAAKjC,MAAMkC,gBAAgBf,KAAlD,WA9BJ,kBAAC,gBAAD,CACEO,WAAW,QACXP,IAAKA,EACLQ,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7B,wBAAIV,IAAKA,GAAT,SACSC,EAAOA,EAAKW,KAAO,OAD5B,4BARY,M,wEAyCV,IAAD,OACDI,EAAWC,OAAOC,KAAKhC,KAAKL,MAAMuB,OAClCe,EAAQH,EAASI,QAAO,SAACC,EAAWrB,GACxC,IAAMC,EAAO,EAAKpB,MAAMqB,OAAOF,GACzBG,EAAQ,EAAKtB,MAAMuB,MAAMJ,GAE/B,OADoBC,GAAwB,cAAhBA,EAAKK,OAExBe,EAAYlB,EAAQF,EAAKY,MAE3BQ,IACN,GACH,OACE,yBAAKrC,UAAU,cACb,0CACA,kBAAC,kBAAD,CAAiB2B,UAAU,KAAK3B,UAAU,SACvCgC,EAASM,IAAIpC,KAAKa,cAErB,yBAAKf,UAAU,SAAf,SAEE,gCAAS1B,EAAY6D,U,GAxEI3B,a,yBCFd+B,E,2MACnBC,QAAUnD,IAAMC,Y,EAChBmD,SAAWpD,IAAMC,Y,EACjBoD,UAAYrD,IAAMC,Y,EAClBqD,QAAUtD,IAAMC,Y,EAChBsD,SAAWvD,IAAMC,Y,EAIjBuD,WAAa,SAAAC,GACXA,EAAMrD,iBAEN,IAAMwB,EAAO,CACXW,KAAM,EAAKY,QAAQ7C,QAAQC,MAC3BiC,MAAOkB,WAAW,EAAKN,SAAS9C,QAAQC,OACxC0B,OAAQ,EAAKoB,UAAU/C,QAAQC,MAC/BoD,KAAM,EAAKL,QAAQhD,QAAQC,MAC3BqD,MAAO,EAAKL,SAASjD,QAAQC,OAE/B,EAAKC,MAAMqD,QAAQjC,GACnB6B,EAAMK,cAAcC,S,wEAIpB,OACE,0BAAMpD,UAAU,YAAYC,SAAUC,KAAK2C,YACzC,2BAAOjB,KAAK,OAAOxB,IAAKF,KAAKsC,QAASrC,KAAK,OAAOG,YAAY,SAC9D,2BACEsB,KAAK,QACLxB,IAAKF,KAAKuC,SACVtC,KAAK,OACLG,YAAY,UAEd,4BAAQsB,KAAK,SAASxB,IAAKF,KAAKwC,WAC9B,4BAAQ9C,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,cAEF,8BAAUgC,KAAK,OAAOxB,IAAKF,KAAKyC,QAASrC,YAAY,SACrD,2BACEsB,KAAK,QACLxB,IAAKF,KAAK0C,SACVzC,KAAK,OACLG,YAAY,UAEd,4BAAQH,KAAK,UAAb,mB,GA5C6BK,a,QCAhB6C,E,2MAanBC,aAAe,SAAAR,GAEbS,QAAQC,IAAIV,EAAMK,cAAcvD,OAEhC,IAAM6D,EAAW,eACZ,EAAK5D,MAAMoB,KADC,eAEd6B,EAAMK,cAAcvB,KAAOkB,EAAMK,cAAcvD,QAElD,EAAKC,MAAM6D,WAAW,EAAK7D,MAAM8D,MAAOF,I,wEAEhC,IAAD,OACP,OACE,yBAAKzD,UAAU,aACb,2BACE4B,KAAK,OACLzB,KAAK,OACLP,MAAOM,KAAKL,MAAMoB,KAAKW,KACvBgC,SAAU1D,KAAKoD,eAEjB,2BACE1B,KAAK,QACLzB,KAAK,OACLP,MAAOM,KAAKL,MAAMoB,KAAKY,MACvB+B,SAAU1D,KAAKoD,eAEjB,4BACE1B,KAAK,SACLzB,KAAK,OACLP,MAAOM,KAAKL,MAAMoB,KAAKK,OACvBsC,SAAU1D,KAAKoD,cAEf,4BAAQ1D,MAAM,aAAd,UACA,4BAAQA,MAAM,eAAd,cAEF,8BACEgC,KAAK,OACLhC,MAAOM,KAAKL,MAAMoB,KAAK+B,KACvBY,SAAU1D,KAAKoD,eAEjB,2BACEnD,KAAK,OACLyB,KAAK,QACLhC,MAAOM,KAAKL,MAAMoB,KAAKgC,MACvBW,SAAU1D,KAAKoD,eAEjB,4BAAQxB,QAAS,kBAAM,EAAKjC,MAAMgE,WAAW,EAAKhE,MAAM8D,SAAxD,oB,GA1D8BnD,aCiBvBsD,EAjBD,SAAAjE,GAAK,OACjB,yBAAKG,UAAU,SACb,+CACA,wEACA,4BAAQA,UAAU,SAAS8B,QAAS,kBAAMjC,EAAMkE,aAAa,YAA7D,qBAGA,4BAAQ/D,UAAU,WAAW8B,QAAS,kBAAMjC,EAAMkE,aAAa,cAA/D,yB,kCCPEC,EAAcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,gDACZC,YAAa,yDASAC,EANFC,IAAOC,YAAYR,EAAYS,YCDvBC,E,2MAQnBC,MAAQ,CACNC,IAAK,KACLC,MAAO,M,EAWTC,YAAc,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEQV,EAAKY,MAAM,EAAKrF,MAAMsF,QAAS,CAAEC,QAAQ,kBAFjD,WAENC,EAFM,QAIDR,MAJC,kCAAAG,EAAA,MAKJV,EAAKgB,KAAL,UAAa,EAAKzF,MAAMsF,QAAxB,UAAyC,CAC7CI,KAAMR,EAASS,KAAKZ,OANZ,OASZ,EAAKa,SAAS,CACZb,IAAKG,EAASS,KAAKZ,IACnBC,MAAOQ,EAAMR,OAASE,EAASS,KAAKZ,MAX1B,sC,EAedb,aAAe,SAAA2B,GACb,IAAMC,EAAe,IAAI1B,IAAS2B,KAAT,UAAiBF,EAAjB,kBACzB1B,EACG4B,OACAC,gBAAgBF,GAChBG,KAAK,EAAKhB,c,EAGfiB,OAAS,oBAAAf,EAAAC,OAAA,uDACP1B,QAAQC,IAAI,cADL,WAAAwB,EAAA,MAEDf,IAAS2B,OAAOI,WAFf,OAGP,EAAKP,SAAS,CACZb,IAAK,OAJA,sC,mFA/BY,IAAD,OAClBX,IAAS2B,OAAOK,oBAAmB,SAAAT,GAC7BA,GACF,EAAKV,YAAY,CAAEU,c,+BAoCf,IAAD,OACDO,EAAS,4BAAQjE,QAAS5B,KAAK6F,QAAtB,YAGf,OAAK7F,KAAKyE,MAAMC,IAIZ1E,KAAKyE,MAAMC,MAAQ1E,KAAKyE,MAAME,MAE9B,6BACE,0DACCkB,GAOL,yBAAK/F,UAAU,aACb,yCACC+F,EACA9D,OAAOC,KAAKhC,KAAKL,MAAMqB,QAAQoB,KAAI,SAAAtB,GAAG,OACrC,kBAAC,EAAD,CACEA,IAAKA,EACL2C,MAAO3C,EACPC,KAAM,EAAKpB,MAAMqB,OAAOF,GACxB0C,WAAY,EAAK7D,MAAM6D,WACvBG,WAAY,EAAKhE,MAAMgE,gBAG3B,kBAAC,EAAD,CAASX,QAAShD,KAAKL,MAAMqD,UAC7B,4BAAQpB,QAAS5B,KAAKL,MAAMqG,kBAA5B,sBAGA,gCA9BK,kBAAC,EAAD,CAAOnC,aAAc7D,KAAK6D,mB,GAzDAvD,aC2ExBU,EAlFA,CACbiF,MAAO,CACLvE,KAAM,kBACNqB,MAAO,mBACPD,KACE,wFACFnB,MAAO,KACPP,OAAQ,aAGV8E,MAAO,CACLxE,KAAM,UACNqB,MAAO,sBACPD,KACE,iFACFnB,MAAO,KACPP,OAAQ,aAGV+E,MAAO,CACLzE,KAAM,eACNqB,MAAO,uBACPD,KACE,qGACFnB,MAAO,KACPP,OAAQ,eAGVgF,MAAO,CACL1E,KAAM,YACNqB,MAAO,mBACPD,KACE,kGACFnB,MAAO,KACPP,OAAQ,aAGViF,MAAO,CACL3E,KAAM,YACNqB,MAAO,mBACPD,KACE,2EACFnB,MAAO,KACPP,OAAQ,aAGVkF,MAAO,CACL5E,KAAM,kBACNqB,MAAO,qBACPD,KACE,0GACFnB,MAAO,KACPP,OAAQ,aAGVmF,MAAO,CACL7E,KAAM,UACNqB,MAAO,sBACPD,KAAM,oEACNnB,MAAO,KACPP,OAAQ,aAGVoF,MAAO,CACL9E,KAAM,UACNqB,MAAO,sBACPD,KACE,sFACFnB,MAAO,IACPP,OAAQ,aAGVqF,MAAO,CACL/E,KAAM,eACNqB,MAAO,qBACPD,KACE,8FACFnB,MAAO,KACPP,OAAQ,cC3ESsF,E,iLAeT,IAAD,SACsC1G,KAAKL,MAAMgH,QAAhD5D,EADD,EACCA,MAAOrB,EADR,EACQA,KAAMC,EADd,EACcA,MAAOmB,EADrB,EACqBA,KACtB3B,EAAyB,cAFxB,EAC2BC,OAElC,OACE,wBAAItB,UAAU,aACZ,yBAAK8G,IAAK7D,EAAO8D,IAAKnF,IACtB,wBAAI5B,UAAU,aACX4B,EADH,IACS,0BAAM5B,UAAU,SAAS1B,EAAYuD,KAE9C,2BAAImB,GACJ,4BACEgE,UAAW3F,EACXS,QAAS,kBAAM,EAAKjC,MAAMoH,WAAW,EAAKpH,MAAM8D,SAE/CtC,EAAc,eAAiB,iB,GA7BRb,aCgInB0G,E,2MA1HbvC,MAAQ,CACNzD,OAAQ,GACRE,MAAO,I,EAiCT8B,QAAU,SAAAjC,GACR,IAAMC,EAAM,eAAQ,EAAKyD,MAAMzD,QAC/BA,EAAO,OAAD,OAAQiG,KAAKC,QAAWnG,EAC9B,EAAKwE,SAAS,CACZvE,OAAQA,K,EAIZwC,WAAa,SAAC1C,EAAKyC,GAEjB,IAAMvC,EAAM,eAAQ,EAAKyD,MAAMzD,QAE/BA,EAAOF,GAAOyC,EAEd,EAAKgC,SAAS,CACZvE,OAAQA,K,EAIZ2C,WAAa,SAAA7C,GAEX,IAAME,EAAM,eAAQ,EAAKyD,MAAMzD,QAE/BA,EAAOF,GAAO,KACd,EAAKyE,SAAS,CACZvE,OAAQA,K,EAIZgF,iBAAmB,WACjB,EAAKT,SAAS,CACZvE,OAAQmG,K,EAIZJ,WAAa,SAAAjG,GAEX,IAAMI,EAAK,eAAQ,EAAKuD,MAAMvD,OAE9BA,EAAMJ,GAAOI,EAAMJ,GAAO,GAAK,EAE/B,EAAKyE,SAAS,CAAErE,MAAOA,K,EAGzBW,gBAAkB,SAAAf,GAChB,IAAMI,EAAK,eAAQ,EAAKuD,MAAMvD,cAEvBA,EAAMJ,GAEb,EAAKyE,SAAS,CAAErE,MAAOA,K,mFA3EJ,IACXkG,EAAWpH,KAAKL,MAAM0H,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOnC,SAChDqC,GACFtH,KAAKuF,SAAS,CACZrE,MAAOuG,KAAKC,MAAMJ,KAGtBtH,KAAKE,IAAMkE,EAAKuD,UAAL,UAAkBP,EAAOnC,QAAzB,WAA2C,CACpDC,QAASlF,KACTyE,MAAO,a,6CAKTL,EAAKwD,cAAc5H,KAAKE,O,2CAIxBqH,aAAaM,QACX7H,KAAKL,MAAM0H,MAAMD,OAAOnC,QACxBwC,KAAKK,UAAU9H,KAAKyE,MAAMvD,U,+BAuDpB,IAAD,OACP,OACE,yBAAKpB,UAAU,oBACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAQU,QAAQ,yBAChB,wBAAIV,UAAU,UACXiC,OAAOC,KAAKhC,KAAKyE,MAAMzD,QAAQoB,KAAI,SAAAtB,GAAG,OACrC,kBAAC,EAAD,CACEA,IAAKA,EACL2C,MAAO3C,EACP6F,QAAS,EAAKlC,MAAMzD,OAAOF,GAC3BiG,WAAY,EAAKA,kBAKzB,kBAAC,EAAD,CACE/F,OAAQhB,KAAKyE,MAAMzD,OACnBE,MAAOlB,KAAKyE,MAAMvD,MAClBW,gBAAiB7B,KAAK6B,kBAIxB,kBAAC,EAAD,CACEmB,QAAShD,KAAKgD,QACdQ,WAAYxD,KAAKwD,WACjBG,WAAY3D,KAAK2D,WACjBqC,iBAAkBhG,KAAKgG,iBACvBhF,OAAQhB,KAAKyE,MAAMzD,OACnBiE,QAASjF,KAAKL,MAAM0H,MAAMD,OAAOnC,e,GApHzB9F,IAAMmB,WCPT,SAASyH,IACtB,OACE,6BACE,8CCCN,IAUeC,EAVA,kBACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAAC5I,KAAK,IAAIiC,UAAWxC,IACjC,kBAACkJ,EAAA,EAAD,CAAO3I,KAAK,kBAAkBiC,UAAWuF,IACzC,kBAACmB,EAAA,EAAD,CAAO1G,UAAWsG,OCLxBM,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,Y","file":"static/js/main.2707c1b3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  myInput = React.createRef();\n\n  goToStore = e => {\n    //Stop the form from submitting\n    e.preventDefault();\n    //Get the text from the input\n    const path = this.myInput.current.value;\n    //Change the page to /store/input\n    this.props.history.push(`/store/${path}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store --></button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTyes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.PropTyes = {\n  tagline: PropTyes.string.isRequired\n};\nexport default Header;\n","import React, { Component } from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nexport default class Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    //made sure the fish is loaded\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition\n          classNames=\"order\"\n          key={key}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition\n        classNames=\"order\"\n        key={key}\n        timeout={{ enter: 500, exit: 500 }}\n      >\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddFish extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = { addFish: PropTypes.func };\n\n  createFish = event => {\n    event.preventDefault();\n\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class EditFish extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = event => {\n    //update the fish\n    console.log(event.currentTarget.value);\n    //take a copy of the fish to be updated\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={this.props.fish.name}\n          onChange={this.handleChange}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          value={this.props.fish.price}\n          onChange={this.handleChange}\n        />\n        <select\n          name=\"status\"\n          type=\"text\"\n          value={this.props.fish.status}\n          onChange={this.handleChange}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          value={this.props.fish.desc}\n          onChange={this.handleChange}\n        ></textarea>\n        <input\n          type=\"text\"\n          name=\"image\"\n          value={this.props.fish.image}\n          onChange={this.handleChange}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Login with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Login with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBmwCY9XrZmZM9rC1b-NgD_YOxPtRoiOtA\",\n  authDomain: \"catch-of-the-day-smarth-bajaj.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-smarth-bajaj.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//named export\nexport { firebaseApp };\n\n//defaul export\nexport default base;\n","import React, { Component } from \"react\";\nimport AddFish from \"./AddFish\";\nimport EditFish from \"./EditFish\";\nimport PropTypes from \"prop-types\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nexport default class Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    //look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Loggin Out\");\n    await firebase.auth().signOut();\n    this.setState({\n      uid: null\n    });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    //1. check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    //2. check if they are the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    //3. they must be the owner, then just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFish\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFish addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n        <form></form>\n      </div>\n    );\n  }\n}\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nexport default class Fish extends Component {\n  //   handleClick = () => {\n  //     this.props.addToOrder(this.props.index);\n  //   };\n\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name} <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add to Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    //reinstate our local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  addFish = fish => {\n    const fishes = { ...this.state.fishes };\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    //take the copy of current state\n    const fishes = { ...this.state.fishes };\n    //update the state\n    fishes[key] = updatedFish;\n\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  deleteFish = key => {\n    //take a copy of state\n    const fishes = { ...this.state.fishes };\n    //update the state\n    fishes[key] = null;\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    });\n  };\n\n  addToOrder = key => {\n    //copy of state\n    const order = { ...this.state.order };\n    //add to order or update the order\n    order[key] = order[key] + 1 || 1;\n\n    this.setState({ order: order });\n  };\n\n  removeFromOrder = key => {\n    const order = { ...this.state.order };\n    //remove that item\n    delete order[key];\n\n    this.setState({ order: order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh SeaFood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        {/* Or  \n        <Order {...this.state} /> */}\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h2>Not Found!!!!</h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// let's go!\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./css/style.css\";\nimport Router from \"./components/Router\";\n\nReactDom.render(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}